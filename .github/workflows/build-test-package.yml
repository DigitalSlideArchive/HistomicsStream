name: Build, test, package

on: [push,pull_request]

jobs:
  build-test-cxx:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
        include:
          - os: ubuntu-18.04
            c-compiler: "gcc"
            cxx-compiler: "g++"
            itk-git-tag: "v5.2.1"
            cmake-build-type: "MinSizeRel"
          - os: windows-2019
            c-compiler: "cl.exe"
            cxx-compiler: "cl.exe"
            itk-git-tag: "v5.2.1"
            cmake-build-type: "Release"
          - os: macos-10.15
            c-compiler: "clang"
            cxx-compiler: "clang++"
            itk-git-tag: "v5.2.1"
            cmake-build-type: "MinSizeRel"

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install ninja

    - name: Get specific version of CMake, Ninja
      uses: lukka/get-cmake@v3.18.3

  test-python:
    needs:
      - build-test-cxx
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - itk-python-git-tag: "v5.2.1"

    steps:
      - uses: actions/checkout@v2
      - name: 'Free up disk space'
        run: |
          # Workaround for https://github.com/actions/virtual-environments/issues/709
          df -h
          sudo apt-get clean
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install flake8 pytest itk==${{ matrix.itk-python-git-tag }}
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          cd test
          pytest
